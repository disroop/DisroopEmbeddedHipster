# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  buildAnalyze:
    runs-on: ubuntu-latest
    container:
      image: disroop/embedded-hipster-sonar:0.6.11
    steps:
      - name: Checking out our code
        uses: actions/checkout@master
      - run: |
          setup
          mumoco --remotes
        name: setup conan
      - run: |
          conan install -if build-host -pr:b=default -pr:h=default --build=missing blinky/conanfile.py
        name: install dependencies host
      - run: |
          /bin/bash -c "source ./build-host/activate.sh && 
          cmake -B build-host -DCMAKE_TOOLCHAIN_FILE=conan_toolchain blinky/. &&
          cmake --build ./build-host &&
          source ./build-host/deactivate.sh"
        name: build host
      - run: |
          /bin/bash -c "export GTEST_OUTPUT='xml:$(pwd)/build-host/utest-report/' &&
          ctest --test-dir build-host"
        name: unit-test execution
      - run: |
          conan install -if build-arm -pr:b=default -pr:h=.profiles/arm-m4-release --build=missing blinky/conanfile.py
        name: install dependencies arm
      - run: |
          /bin/bash -c "source ./build-arm/activate.sh && 
          cmake -B build-arm -DCMAKE_TOOLCHAIN_FILE=conan_toolchain blinky/. &&
          build-wrapper --out-dir build-arm/bw-output cmake --build ./build-arm &&
          source ./build-arm/deactivate.sh"
        name: build arm
      - run: |
          python ./tools/coverage.py --build build-host --source-folder source --gcov --output build-host/gcov
        name: create coverage report
      - run: sonar-scanner
          -Dsonar.projectKey=disroop_DisroopEmbeddedHipster
          -Dsonar.organization=disroop
          -Dsonar.sources=blinky/source
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.cfamily.build-wrapper-output=build-arm/bw-output
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.cfamily.threads=2
          -Dsonar.cfamily.cache.enabled=False
          -Dsonar.cfamily.gcov.reportsPath=build-host/gcov/
          -Dsonar.exclusions=blinky/source/system/** 
          #-Dsonar.cfamily.cppunit.reportsPath=build-host/utest-report/
        name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Publish test # Name of the check run which will be created
          path: build-host/utest-report/*.xml # Path to test results
          reporter: jest-junit # Format of test results
#  mumoco-build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2    
#
#     - name: Install dependencies
#       run: |
#          python -m pip install --upgrade pip
#          pip install docker 
#
#      - name: build 
#        run: python3 -u ./container-build.py

