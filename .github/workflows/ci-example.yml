# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  arm_build:
    runs-on: ubuntu-latest
    container:
      image: disroop/embedded-hipster-sonar:0.6.1
    steps:
      - name: Checking out our code
        uses: actions/checkout@master
      - run: |
          ls
          setup
          mumoco --remotes
        name: setup conan
      - run: |
          conan install -if build-arm -pr:b=default -pr:h=.profiles/arm-m4-release --build=missing blinky/conanfile.py
        name: install dependencies
      - run: |
          /bin/bash -c "source ./build-arm/activate.sh && 
          cmake -B build-arm  bu-DCMAKE_TOOLCHAIN_FILE=conan_toolchain blinky/. &&
          build-wrapper --out-dir build-arm/bw-output cmake --build ./build-arm &&
          source ./build-arm/deactivate.sh"
        name: build
      - run: sonar-scanner
          -Dsonar.projectKey=disroop_DisroopEmbeddedHipster
          -Dsonar.organization=disroop
          -Dsonar.sources=blinky/source
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.cfamily.build-wrapper-output=build-arm/bw-output
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.cfamily.threads=2
          -Dsonar.cfamily.cache.enabled=false
        name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     args: >
      #       -Dsonar.projectKey=disroop_DisroopEmbeddedHipster
      #       -Dsonar.organization=disroop
      #       -Dsonar.sources=blinky/source
      #       -Dsonar.sourceEncoding=UTF-8
      #       -Dsonar.cfamily.build-wrapper-output=build-arm/bw-output
      #       -Dsonar.host.url=https://sonarcloud.io/
      #       -Dsonar.cfamily.threads=2
      #       -Dsonar.cfamily.cache.enabled=false
